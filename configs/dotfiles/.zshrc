# Zsh Configuration Template
# Generated by Ubuntu Multipass Setup Script

# Oh My Zsh Configuration
export ZSH="$HOME/.oh-my-zsh"

# Theme
ZSH_THEME="robbyrussell"

# Plugins
plugins=(
    git
    npm
    nvm
    python
    pip
    virtualenv
    docker
    kubectl
    command-not-found
    history-substring-search
    zsh-autosuggestions
    zsh-syntax-highlighting
)

# Load Oh My Zsh
source $ZSH/oh-my-zsh.sh

# User Configuration

# Environment Variables
export EDITOR='vim'
export BROWSER='firefox'
export TERM='xterm-256color'

# History Configuration
HISTSIZE=10000
SAVEHIST=10000
setopt HIST_VERIFY
setopt SHARE_HISTORY
setopt APPEND_HISTORY
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE

# NVM Configuration
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# Python Virtual Environment
export WORKON_HOME="$HOME/.virtualenvs"
export VIRTUALENVWRAPPER_PYTHON="/usr/bin/python3"

# Load aliases
if [ -f ~/.aliases ]; then
    source ~/.aliases
fi

# Load local configuration
if [ -f ~/.zshrc.local ]; then
    source ~/.zshrc.local
fi

# Custom Functions

# Quick directory navigation
cdls() {
    cd "$1" && ls -la
}

# Create and enter directory
mkcd() {
    mkdir -p "$1" && cd "$1"
}

# Git shortcuts
gst() {
    git status
}

gpush() {
    git push origin $(git branch --show-current)
}

gpull() {
    git pull origin $(git branch --show-current)
}

# System information
sysinfo() {
    echo "System Information:"
    echo "=================="
    echo "Hostname: $(hostname)"
    echo "OS: $(lsb_release -d | cut -f2)"
    echo "Kernel: $(uname -r)"
    echo "Architecture: $(uname -m)"
    echo "CPU: $(lscpu | grep 'Model name' | cut -d':' -f2 | xargs)"
    echo "Memory: $(free -h | grep Mem | awk '{print $2}')"
    echo "Disk: $(df -h / | tail -1 | awk '{print $2}')"
    echo "Uptime: $(uptime -p)"
}

# Development shortcuts
serve() {
    local port=${1:-8000}
    echo "Starting HTTP server on port $port"
    python3 -m http.server $port
}

# Docker shortcuts
dps() {
    docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
}

# Quick edit configuration files
edit-zsh() {
    $EDITOR ~/.zshrc
}

edit-aliases() {
    $EDITOR ~/.aliases
}

# Welcome message
echo "Welcome to $(hostname)! ðŸš€"
echo "Type 'sysinfo' for system information"